import User from '../models/User.js'; import jwt from 'jsonwebtoken'
const gen=u=>jwt.sign({id:u._id,email:u.email,rol:u.rol},process.env.JWT_SECRET,{expiresIn:'7d'})
const norm=e=>String(e||'').trim().toLowerCase()
const parse=f=>{ if(!f) return null; let d=new Date(f); if(isNaN(d)){ const p=String(f).split(/[\/\-]/); if(p.length===3){ const a=p[0],b=p[1],c=p[2]; if(+a<=31&&+b<=12) d=new Date(`${c}-${b}-${a}`) } } return isNaN(d)?null:d }
export const register=async(req,res)=>{ try{ let {nombre,apellido,fechaNacimiento,email,password,direccion}=req.body; email=norm(email); const fn=parse(fechaNacimiento); if(!fn) return res.status(400).json({msg:'Fecha inválida'}); const ex=await User.findOne({email}); if(ex) return res.status(400).json({msg:'Correo ya registrado'}); const u=await User.create({nombre,apellido,fechaNacimiento:fn,email,password,direccion}); const t=gen(u); res.status(201).json({token:t,user:{nombre:u.nombre,apellido:u.apellido,email:u.email,rol:u.rol,direccion:u.direccion,avatar:u.avatar}}) }catch(e){ res.status(500).json({msg:e.message}) } }
export const login=async(req,res)=>{ try{ let {email,password}=req.body; email=norm(email); const u=await User.findOne({email}); if(!u) return res.status(400).json({msg:'Usuario o contraseña incorrectos'}); const ok=await u.matchPassword(password); if(!ok) return res.status(400).json({msg:'Usuario o contraseña incorrectos'}); const t=gen(u); res.json({token:t,user:{nombre:u.nombre,email:u.email,rol:u.rol,direccion:u.direccion,avatar:u.avatar}}) }catch(e){ res.status(500).json({msg:e.message}) } }
